#include <I2C_LCD.c> //Biblioteca de controle do Display por I2C
//Função para iniciar o display
void Start(){   
   //LCD_Goto(coluna, linha);        
   LCD_Goto(2, 2);                         
   LCD_Out("Carregando .");
   delay_ms(300);
   LCD_Goto(14, 2);
   LCD_Out(".");   
   delay_ms(300);
   LCD_Goto(15, 2);
   LCD_Out(".");
   delay_ms(300);
   LCD_Goto(16, 2);
   LCD_Out(".");
   delay_ms(300);
   LCD_Goto(1, 2);
   LCD_Out("                    ");                //Limpara o display   
   LCD_Goto(2, 2);                                // Go to column 2 row 3
   LCD_Out("Clique em iniciar"); 
}

void CloseDoor(){
   LCD_Goto(2,2);
   LCD_Out("                    ");                //Limpara o display   
   LCD_Goto(2,2);
   LCD_Out("Fecha Porta");
}

// Função de constrole do andar das lâmpadas ==========================================
void Lamps(){                                      
   unsigned int8 speed_ = 2000;                    //Velocidade dos motores
   
   for(;;){                                        //Função para mover as lampadas
      if(input(pin_B7)){                           //Teste para saber se está no final. Se não estiver ela irá para o ponto inicial         
         for(int i=0; i<3; i++){                   //irá para o meio da pagina para começar a esterilização            
            output_c(0b00000101);
            delay_ms(speed_);
            output_c(0b00000110);
            delay_ms(speed_);
            output_c(0b00010010);
            delay_ms(speed_);
            output_c(0b00010001);
            delay_ms(speed_);        
         }
         delay_ms(2000);                         //Tempo de espera de 40 segundos para esterelização  
         for(;;){                                //Função que retornará as lampadas para o estágio inicial            
            output_c(0b00000110);
            delay_ms(speed_);
            if(input(pin_B7)) break;
            output_c(0b00000101);
            delay_ms(speed_);
            if(input(pin_B7)) break;
            output_c(0b00010001);
            delay_ms(speed_);
            if(input(pin_B7)) break;
            output_c(0b00010010);
            delay_ms(speed_);
            if(input(pin_B7)) break;
         }   
         break;
      }else{                                    //Caso não esteja na posição inicial essa função irá levar até la               
         for(;;){                  
            output_c(0b00000110);
            delay_ms(speed_);
            if(input(pin_B7)) break;            //Teste se chegou na posição inicial
            output_c(0b00000101);
            delay_ms(speed_);
            if(input(pin_B7)) break;
            output_c(0b00010001);
            delay_ms(speed_);
            if(input(pin_B7)) break;
            output_c(0b00010010);
            delay_ms(speed_);
            if(input(pin_B7)) break;
         }
      }
   }   
   delay_ms(2000);                              //Tempo de aguardo até passar as páginas
}

//Função que irá passar as páginas ===============================================================
void PassadorPag(){
   unsigned int8 speed_ = 1000;           //Velocidade dos motores
   LCD_Goto(2, 2);  
   LCD_Out("                    ");                //Limpara o display
   LCD_Goto(2, 2);  
   LCD_Out("Passando pagina"); 
   for(;;){                               //Haste principal irá para a frente até encostar no livro
      output_a(0b00000110);
      delay_ms(speed_);
      if(input(pin_B3)) break;            //Teste se encostou no livro
      output_a(0b00000101);
      delay_ms(speed_);
      if(input(pin_B3)) break;
      output_a(0b00001001);
      delay_ms(speed_);
      if(input(pin_B3)) break;
      output_a(0b00001010);
      delay_ms(speed_);
      if(input(pin_B3)) break;
   }
   delay_ms(500);
   output_high(pin_B2);                    //Liga o FAN para segurar a página
   delay_ms(1000);                        //Depois que tiver encostador irá parar e esperar até sugar a página
   for(;;){                               //Irá passar a pagina até encostar do outro lado
      output_a(0b00000101);
      delay_ms(speed_);
      if(input(pin_B4)) break;            //Teste se chegou do outro lado
      output_a(0b00000110);
      delay_ms(speed_);
      if(input(pin_B4)) break;
      output_a(0b00001010);
      delay_ms(speed_);
      if(input(pin_B4)) break;
      output_a(0b00001001);
      delay_ms(speed_);       
      if(input(pin_B4)) break;
   }
   delay_ms(1000);                        
   output_low(pin_B2);                    //Desliga a FAN do Passador
   delay_ms(1000);   
   for(;;){                               //Faz a haste secundária sair da pagina
      output_d(0b00000011);
      delay_ms(speed_);
      output_d(0b00000110);
      delay_ms(speed_);
      output_d(0b00001100);
      delay_ms(speed_);
      output_d(0b00001001);
      delay_ms(speed_);
   }
      
}

